<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Demo</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/bootstrap-theme.css">
    <link rel="stylesheet" href="/styles/bootstrap-theme.min.css">
    <link rel="stylesheet" href="/styles/bootstrap.css">
    <link rel="stylesheet" href="/styles/bootstrap.min.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/slick-theme.css">
    <link rel="stylesheet" href="/styles/slick.css">
    <link rel="stylesheet" href="/styles/zapp.css">
    <!--STYLES END-->
    <style>
      body { padding-top: 60px; }
    </style>
  </head>

  <body>
<div class="container" style="padding:0">
    <nav class="navbar navbar-default navbar-fixed-top">
      <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
          <button type="button" class="navbar-toggle collapsed pull-left" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand">
            <%if (!title) {
              %><%= __('Demo') %><%
            }
            else {
              %><%= title %><%
            }
            if (typeof searchResult != 'undefined') {
              %><span class="hidden-xs">, Departure&nbsp;<%=searchParams.departureDate%><%
              if (searchParams.returnDate) {
                %>, Return&nbsp;<%=searchParams.returnDate%><%
              }
              %>, <%= searchParams.CabinClass %></span><%
            }
            %>&nbsp;<span id='search_count' class="badge hidden" style="background-color: lightgray"></span>
          </a>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
          <ul class="nav navbar-nav">
            <% if (typeof user != 'undefined') { %>
            <li><a href="/search">Search</a></li>
            <li><a href="/profile">Profile</a></li>
            <li><a href="/logout">Log out <b><%= user.email %></b></a></li>
            <% } else { %>
            Powered by Demo Inc &copy; 2015
            <% } %>
          </ul>
        </div><!-- /.navbar-collapse -->
      </div><!-- /.container-fluid -->
    </nav>

    <div class="main container clearfix">

      <% if (typeof errors != 'undefined') {%>
        <% errors.forEach(function (error) { %>
          <div class="alert alert-danger" role="alert"><%= __(error) %></div>
        <% }) %>
      <% } %>

      <%- body %>
    </div>
</div>



    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/js/dependencies/jquery.js"></script>
    <script src="/js/dependencies/bootstrap.js"></script>
    <script src="/js/dependencies/jquery.validate.min.js"></script>
    <script src="/js/dependencies/socket.io.min.js"></script>
    <script src="/js/dependencies/typeahead.bundle.min.js"></script>
    <script src="/js/slick.js"></script>
    <script src="/js/toggler.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
