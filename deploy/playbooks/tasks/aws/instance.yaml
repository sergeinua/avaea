---

- name: search for an ami image
  ec2_ami_search: >
    region={{ region|default('us-west-2') }}
    store={{ store|default('ebs') }}
    virt={{ virt|default('hvm') }}
    distro={{ distro|default('ubuntu') }}
    release={{ release|default('trusty') }}
  register: ami_data

- name: debug ami image
  debug: msg="{{ ami_data }}"

- name: Provision EC2 instances.
  ec2:
    key_name: "{{ keypair|default('mykey') }}"
    instance_tags:
      Name: "{{ item.name | default('') }}"
      inventory_group: "{{ item.group | default('') }}"
      inventory_host: "{{ item.name | default('') }}"
    group: "{{ item.security_group | default('') }}"
    instance_type: "{{ item.instance_type | default('t2.micro')}}" # Free
    image: "{{ ami_data.ami }}"
    region: "{{ region|default('us-west-2') }}"
    wait: yes
    wait_timeout: 500
    exact_count: 1
    count_tag:
      Name: "{{ item.name | default('') }}"
      inventory_group: "{{ item.group | default('') }}"
      inventory_host: "{{ item.name | default('') }}"
  register: created_instances
  with_items: "{{ instances }}"

- name: debug instance start
  debug: 'msg="{{ created_instances }}"'

- name: Add EC2 instances to inventory groups.
  add_host:
    name: "{{ item.1.tagged_instances.0.public_ip }}"
    groups: "aws,{{ item.1.item.group }},{{ item.1.item.name }}"
    # You can dynamically add inventory variables per-host.
    ansible_ssh_user: ubuntu

  when: item.1.instances is defined
  with_indexed_items: "{{ created_instances.results }}"

- debug: msg="{{ groups.aws }}"

# Wait until ssh will be reachable
- name: Wait until ssh will be reachable
  local_action: wait_for
    host={{ item }}
    port=22
    timeout=300
    state=started
  with_items: "{{ groups.aws }}"
